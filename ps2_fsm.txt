module ps2_fsm(key_pressed, clock, reset, in, out, perc);
	input key_pressed, clock, reset, perc;
	input [7:0] in;
	output [7:0] out;
	reg [7:0] out;
	reg [31:0] counter = 1'b0;
	reg stop_playing = 1'b0;
	reg [7:0] previous_key = 8'h00;

	always @ (posedge clock) begin
	
		if (reset) begin
			out = 8'b0;
			stop_playing = 1'b0;
			counter = 1'b0;
		end
		
		else if (in == 8'h1A || in == 8'h1B || in == 8'h22 || in == 8'h23 ||
		         in == 8'h21 || in == 8'h2A || in == 8'h34 || in == 8'h32 ||
					in == 8'h33 || in == 8'h31 || in == 8'h3B || in == 8'h3A )  begin
		
			if(perc) begin
				if(~stop_playing) begin
					out = in;
					counter = 1'b0;
					previous_key = in;
				end
				out = 8'b0;
			end
			
			else begin
				if(~stop_playing) begin
					out = in;
					counter = 1'b0;
					previous_key = in;
				end
				else begin
					out = 8'b0;
				end
			end
			
		end
				
		else if (in == 8'hF0) begin 
			stop_playing = 1'b1;
			out = previous_key;
		end
		
		else begin
			out = 8'b0;
			counter = 1'b0;
			previous_key = in;
		end
		
		counter = counter + 1;
		
		if(counter == 20) begin
			if(in != previous_key) begin // new key is pressed
				stop_playing = 1'b0;
				counter = 1'b0;
			end
			counter = 1'b0;
		end
		
		
	end

endmodule